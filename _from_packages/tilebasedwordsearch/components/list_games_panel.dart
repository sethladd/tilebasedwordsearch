// Auto-generated from list_games_panel.html.
// DO NOT EDIT.

library list_boards_panel;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'package:web_ui/web_ui.dart';
import 'package:tilebasedwordsearch/shared_html.dart';



class ListGamesPanel extends WebComponent {
  /** Autogenerated from the template. */

  autogenerated.ScopedCssMapper _css;

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("list-games");
  static final __html1 = new autogenerated.Element.html('<li template="" repeat="game in games"></li>'), __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <p>Games</p>
        <ul>
          <li style="display:none"></li>
        </ul>
      ''');
  autogenerated.LIElement __e42;
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("list-games");
    setScopedCss("list-games", new autogenerated.ScopedCssMapper({"list-games":"[is=\"list-games\"]"}));
    _css = getScopedCss("list-games");
    __t = new autogenerated.Template(__root);
    __root.nodes.add(__shadowTemplate.clone(true));
    __e42 = __root.nodes[3].nodes[1];
    __t.loop(__e42, () => games, ($list, $index, __t) {
      var game = $list[$index];
      var __e41;
      __e41 = __html1.clone(true);
      var __binding40 = __t.contentBind(() => game.dbId, false);
      __e41.nodes.addAll([new autogenerated.Text('\n            '),
          __binding40,
          new autogenerated.Text('\n          ')]);
    __t.add(__e41);
    });
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e42 = null;
  }

  /** Original code from the component. */

  List<Game> games;
  
  
}
//# sourceMappingURL=list_games_panel.dart.map